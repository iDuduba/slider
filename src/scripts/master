#!/bin/sh

#分析命令行参数
CONSOLE=false

while getopts ci:p:v opt; do
	case "$opt" in
		c) CONSOLE=true ;;
		v) OPTION_VERBOSE=true ;;
		i) INSTANCE=${OPTARG} ;;
		p) PROFILE=${OPTARG} ;;
		\?)
			echo "Invalid option: -$OPTARG" >&2
			exit 1
			;;
		:)
			echo "Option -$OPTARG requires an argument." >&2
			exit 1
			;;
	esac
done
shift $(( OPTIND - 1 )) # now do something with $@

if [ -z "$APP_BASE_DIR" ]; then
    APP_BASE_DIR=`dirname "$0"`
    APP_BASE_DIR=`( cd "$APP_BASE_DIR" && cd .. && pwd )`
fi
export APP_BASE_DIR

cd $APP_BASE_DIR

if [ -z "$JAVA_HOME" -a -z "$JRE_HOME" ]; then
    echo "Neither the JAVA_HOME nor the JRE_HOME environment variable is"
    echo "defined. At least one of these environment variable is needed"
    echo "to run this program"
    exit 1
fi
if [ -z "$JRE_HOME" ]; then
    JRE_HOME="$JAVA_HOME"
fi
_RUNJAVA="$JRE_HOME/bin/java"

JARPATH="$APP_BASE_DIR/lib"

CLASSPATH=
if [ ! -z "$CLASSPATH" ]; then
    CLASSPATH="$CLASSPATH"
fi

# 遍历应用程序依赖的jar包，并加入CLASSPATH。
for jarfile in `ls lib/.`; do
    CLASSPATH="${CLASSPATH}:lib/$jarfile"
done

JAVA_OPTS="-Dlogging.config=file:config/logback-spring.xml"
if ${CONSOLE}; then
  JAVA_OPTS="${JAVA_OPTS} -Dspring.profiles.active=dev"
fi

if [ ! -z "${INSTANCE}" ]; then
    JAVA_OPTS="${JAVA_OPTS} -Dinstance=${INSTANCE}"
fi

if [ ! -z "${PROFILE}" ]; then
	JAVA_OPTS="${JAVA_OPTS} -Dspring.profiles.active=${PROFILE}"
fi

#LOGGING_CONF="-Dlogfilename=log/$INSTANCE"
#JAVA_OPTS="-Dlog4j.configuration=file:$DM_BASE_DIR/conf/log4j.xml"
VM_OPTS=-Xmx2048m
MAIN_CLASS=com.laic.slider.SliderApplication

if ${CONSOLE}; then
	eval "$_RUNJAVA $JAVA_OPTS $VM_OPTS -classpath $CLASSPATH $MAIN_CLASS $@"
else
	eval "setsid $_RUNJAVA $JAVA_OPTS $VM_OPTS -classpath $CLASSPATH $MAIN_CLASS $@ > /dev/null 2>&1 &"
fi

exit $?

